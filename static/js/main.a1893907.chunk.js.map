{"version":3,"sources":["components/style.js","components/Search.js","components/SearchResult.js","components/theme.js","components/App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","Main","styled","div","_templateObject2","Result","_templateObject3","props","theme","colors","background","Info","h3","_templateObject4","textLight","ButtonGroup","_templateObject5","Button","button","_templateObject6","accent","NextButton","_templateObject7","InvertButton","_templateObject8","SearchWrapper","_templateObject9","primaryDark","Gallery","_templateObject10","Thumbnail","img","_templateObject11","SearchForm","pre","_templateObject12","text","_ref","handleReset","isSubmitting","values","Object","objectWithoutProperties","react_default","a","createElement","formik_esm","type","name","placeholder","size","disabled","onClick","query","initValues","Search","initialValues","onSubmit","_ref2","setSubmitting","resetForm","queryImage","concat","component","SearchResult","items","links","length","map","item","key","data","nasa_id","src","href","alt","link","rel","prompt","primary","primaryLight","App","_useState","useState","_useState2","slicedToArray","fetching","setFetching","_useState3","_useState4","error","setError","_useState5","_useState6","setItems","_useState7","_useState8","setLinks","asyncToGenerator","regenerator_default","mark","_callee","url","result","_result$data$collecti","_items","_links","wrap","_context","prev","next","axios","get","sent","collection","t0","message","finish","stop","_x","apply","this","arguments","Fragment","styled_components_browser_esm","components_Search","components_SearchResult","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1893907.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport styled from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  *,*::before, *::after {\n    margin:0;\n    padding: 0;\n    outline: none;\n    box-sizing: inherit;    \n  }\n\n  html {\n    font-family: \"Lato\", sans-serif;\n    font-size: 62.5%;\n    font-weight: 400;\n    line-height: 1.5;\n    box-sizing: border-box;\n  }\n`;\n\nexport const Main = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  /* padding: 1rem; */\n  /* border: 1px solid red; */\n`;\n\nexport const Result = styled.div`\n  flex: 1;\n  background-color: ${props => props.theme.colors.background};\n`;\n\nexport const Info = styled.h3`\n  color: ${props => props.theme.colors.textLight};\n  font-size: 3rem;\n  margin: 1rem 2rem;\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  background-color: ${props => props.theme.colors.accent};\n  font-size: 3rem;\n  padding: 5px 20px;\n  margin-right: 1rem;\n  border: 2px solid white;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.4);\n  }\n\n  &:active {\n    transform: translateY(-1px);\n    box-shadow: 0 0 0 rgba(0, 0, 0, 0);\n  }\n`;\n\nexport const NextButton = styled(Button)`\n  flex: 1;\n  margin: 0;\n`;\n\nexport const InvertButton = styled(Button)`\n  color: #ff4081;\n  background-color: white;\n  border-color: #ff4081;\n`;\n\nexport const SearchWrapper = styled.div`\n  background-color: ${props => props.theme.colors.primaryDark};\n  padding: 2rem;\n  color: white;\n\n  input {\n    padding: 5px 10px;\n    font-size: 3rem;\n    margin-right: 2rem;\n    border: 2px solid white;\n    color: white;\n    background-color: transparent;\n    ::placeholder {\n      color: white;\n    }\n  }\n`;\n\nexport const Gallery = styled.div`\n  padding: 1.5rem;\n`;\n\nexport const Thumbnail = styled.img`\n  margin: 0.5rem;\n  max-width: 250px;\n  max-height: 150px;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(2);\n    border: 2px solid ${props => props.theme.colors.background};\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.6);\n    cursor: pointer;\n  }\n`;\n\nexport const PreBlock = styled.pre`\n  font-size: 1.5rem;\n  color: ${props => props.theme.colors.text};\n  margin: 1.5rem 0.5rem;\n  padding: 1rem;\n  background-color: ${props => props.theme.colors.background};\n  border: 1px solid ${props => props.theme.colors.textLight};\n`;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\n// import nasa from '../images/nasa.png';\nimport { Button, InvertButton, SearchWrapper } from './style';\n\nconst SearchForm = ({ handleReset, isSubmitting, values, ...props }) => (\n  <Form>\n    <Field\n      type=\"text\"\n      name=\"query\"\n      placeholder='Search for ... (e.g. \"Orion\")'\n      size=\"30\"\n    />\n    <Button type=\"submit\" disabled={isSubmitting}>\n      Search\n    </Button>\n    <InvertButton\n      type=\"reset\"\n      onClick={handleReset}\n      disabled={values.query === '' ? 'disabled' : ''}\n    >\n      Clear\n    </InvertButton>\n  </Form>\n);\n\nconst initValues = { query: '' };\n\nconst NASA_QUERY_URL = 'https://images-api.nasa.gov/search?media_type=image&q=';\nconst queryUrl = query => `${NASA_QUERY_URL}${query}`;\n\nconst Search = props => {\n  return (\n    <SearchWrapper>\n      <Formik\n        initialValues={initValues}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setSubmitting(false);\n          props.queryImage(queryUrl(values.query));\n          resetForm(initValues);\n        }}\n        component={SearchForm}\n      />\n    </SearchWrapper>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport {\n  Gallery,\n  Thumbnail,\n  Info,\n  // PreBlock,\n  ButtonGroup,\n  NextButton\n} from './style';\n\n// {\n//   \"data\": [\n//     {\n//       \"center\": \"JPL\",\n//       \"description\": \"Mars Rover Studies Soil on Mars\",\n//       \"nasa_id\": \"PIA07081\",\n//       \"media_type\": \"image\",\n//       \"description_508\": \"Mars Rover Studies Soil on Mars\",\n//       \"secondary_creator\": \"NASA/JPL\",\n//       \"title\": \"Mars Rover Studies Soil on Mars\",\n//       \"keywords\": [\n//         \"Mars\",\n//         \"Mars Exploration Rover MER\"\n//       ],\n//       \"date_created\": \"2004-11-30T21:29:24Z\"\n//     }\n//   ],\n//   \"href\": \"https://images-assets.nasa.gov/image/PIA07081/collection.json\",\n//   \"links\": [\n//     {\n//       \"rel\": \"preview\",\n//       \"render\": \"image\",\n//       \"href\": \"https://images-assets.nasa.gov/image/PIA07081/PIA07081~thumb.jpg\"\n//     }\n//   ]\n// }\n// [\n//   {\n//     \"rel\": \"next\",\n//     \"prompt\": \"Next\",\n//     \"href\": \"https://images-api.nasa.gov/search?q=mars&media_type=image&page=2\"\n//   }\n// ]\n\nconst SearchResult = ({ items, links, queryImage }) => {\n  if (!items) {\n    return null;\n  }\n\n  if (items.length === 0) {\n    return <Info>Sorry, no matching results.</Info>;\n  }\n\n  return (\n    <Gallery>\n      {items &&\n        items\n          // .slice(0, 3)\n          .map(item => (\n            <Thumbnail\n              key={item.data[0].nasa_id}\n              src={item.links[0].href}\n              alt={`nasa_image-${item.data.nasa_id}`}\n            />\n          ))}\n      {links && (\n        <ButtonGroup>\n          {links.map(link => (\n            <NextButton key={link.rel} onClick={() => queryImage(link.href)}>\n              {link.rel === 'next' ? `${link.prompt} >` : `< ${link.prompt}`}\n            </NextButton>\n          ))}\n        </ButtonGroup>\n      )}\n\n      {/* {items && <PreBlock>{JSON.stringify(items[0], null, 2)}</PreBlock>}\n      {links && <PreBlock>{JSON.stringify(links, null, 2)}</PreBlock>} */}\n    </Gallery>\n  );\n};\n\nexport default SearchResult;\n","const theme = {\n  colors: {\n    primary: '#FFC107',\n    primaryDark: '#FFA000',\n    primaryLight: '#FFECB3',\n    background: '#FFF',\n    text: '#212121',\n    textLight: '#757575',\n    accent: '#FF4081'\n  }\n};\n\nexport default theme;\n","import React, { useState } from 'react';\nimport Search from './Search';\nimport SearchResult from './SearchResult';\nimport axios from 'axios';\nimport { GlobalStyle, Main, Info, Result } from './style';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\n\nfunction App() {\n  const [fetching, setFetching] = useState(false);\n  const [error, setError] = useState(null);\n  const [items, setItems] = useState(null);\n  const [links, setLinks] = useState(null);\n\n  const queryImage = async url => {\n    try {\n      setFetching(true);\n\n      const result = await axios.get(url);\n      const { items, links } = result.data.collection;\n\n      setItems(items);\n\n      if (links) {\n        setLinks(links);\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setFetching(false);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <Main>\n          <Search queryImage={queryImage} />\n          <Result>\n            {fetching && <Info>Fetching .....</Info>}\n            {error && <Info>{error}</Info>}\n            <SearchResult items={items} links={links} queryImage={queryImage} />\n          </Result>\n        </Main>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}